class Solution {
public:
    int orangesRotting(vector<vector<int>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        vector<vector<int>>vis(n,vector<int>(m,0));
        queue<pair<pair<int,int>,int>>q;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==2){
                    q.push({{i,j},0});
                    vis[i][j]=2;
                }
            }
        }
        int row[]={0,0,-1,1};
        int col[]={1,-1,0,0};
        int ans=0;
        while(!q.empty()){
            int a=q.front().first.first;
            int b=q.front().first.second;
            int cnt=q.front().second;
            q.pop();
            ans=max(ans,cnt);
            for(int i=0;i<4;i++){
                int r=a+row[i];
                int c=b+col[i];
                if(r>=0 && c>=0 && r<n && c<m && grid[r][c]==1 && vis[r][c]==0){
                    q.push({{r,c},cnt+1});
                    vis[r][c]=2;
                }
            }
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(vis[i][j]!=2 && grid[i][j]==1) return -1;
            }
        }
        return ans;
    }
};