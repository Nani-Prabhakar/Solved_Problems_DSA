int longestBitonicSubsequence(vector<int>& arr, int n)
{
	// Write your code here.
	vector<int>dp1(n,1),dp2(n,1);
	for(int i=0;i<n;i++){
		for(int prev=0;prev<i;prev++){
			if(arr[prev]<arr[i]){
				dp1[i]=max(dp1[i],dp1[prev]+1);
			}
		}
	}
	for(int i=n-1;i>=0;i--){
		for(int prev=n-1;prev>i;prev--){
			if(arr[prev]<arr[i]){
				dp2[i]=max(dp2[i],dp2[prev]+1);
			}
		}
	}
	int ans=0;
	for(int i=0;i<n;i++){
		ans=max(ans,dp1[i]+dp2[i]-1);
	}
	return ans;
}