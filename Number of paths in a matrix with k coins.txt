//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


// } Driver Code Ends

class Solution {
public:
    int dp[100][100][100];
    int N;
    int rec(int i,int j,int k,vector<vector<int>> &arr){
      if( i==N-1 and j==N-1 and k==arr[i][j])return 1;
      if(k<=0 || i==N || j==N)return 0;
      if(dp[i][j][k]!=-1){
          return dp[i][j][k];
      }
      return dp[i][j][k]=rec(i+1,j,k-arr[i][j],arr)+rec(i,j+1,k-arr[i][j],arr);
    }
public:
    
    long long numberOfPath(int n, int k, vector<vector<int>> &arr){
        
        // Code Here
        N=n;
        memset(dp,-1,sizeof(dp));
        return rec(0,0,k,arr);
    }
};


//{ Driver Code Starts.

int main()
{
    Solution obj;
    int i,j,k,l,m,n,t;
    cin>>t;
    while(t--)
    {
        cin>>k>>n;
        vector<vector<int>> v(n, vector<int>(n, 0));
        for(i=0;i<n;i++)
            for(j=0;j<n;j++)
                cin>>v[i][j];
        cout << obj.numberOfPath(n, k, v) << endl;
    }
}
// } Driver Code Ends