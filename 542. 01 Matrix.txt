class Solution {
public:
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
        int n=mat.size();
        int m=mat[0].size();
        //int ans[n][m];
        vector<vector<int>>ans(n,vector<int>(m,-1));
        vector<vector<int>>vis(n,vector<int>(m,0));
        queue<pair<pair<int,int>,int>>q;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(mat[i][j]==0){
                    q.push({{i,j},0});
                    vis[i][j]=1;
                }
            }
        }
        int delta[5]={-1,0,1,0,-1};
        while(!q.empty()){
            int r=q.front().first.first;
            int c=q.front().first.second;
            int dist=q.front().second;
            q.pop();
            ans[r][c]=dist;
            for(int i=0;i<4;i++){
                int row=r+delta[i];
                int col=c+delta[i+1];
                if(row<n and row>=0 and col<m and col>=0 and vis[row][col]!=1){
                    q.push({{row,col},dist+1});
                    vis[row][col]=1;
                }
            }
        }
        return ans;
    }
};