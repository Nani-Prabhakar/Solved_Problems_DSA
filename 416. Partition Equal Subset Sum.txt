416. Partition Equal Subset Sum
class Solution {
public:
    bool canPartition(vector<int>& nums) {
        int n = nums.size();
        int sum = 0;
        
        for(int i = 0; i < n; i++) {
            sum += nums[i];
        }
        
        if (sum % 2 == 1) {
            return false;
        }
        
        int target = sum / 2;
        //vector<vector<bool>> dp(n, vector<bool>(target + 1, false));
        vector<bool>prev(target+1,0),cur(target+1,0);
        prev[0]=cur[0]=true;
        // for (int i = 0; i < n; i++) {
        //     dp[i][0] = true;
        // }
        
        if (nums[0] <= target) {
            prev[nums[0]] = true;
        }
        
        for (int i = 1; i < n; i++) {
            for (int j = 1; j <= target; j++) {
                int take = 0;
                if (nums[i] <= j) {
                    take = prev[j-nums[i]];
                }
                int not_take=prev[j];
                cur[j] = take || not_take;
            }
            prev=cur;
        }
        
        return cur[target];
    }
};
