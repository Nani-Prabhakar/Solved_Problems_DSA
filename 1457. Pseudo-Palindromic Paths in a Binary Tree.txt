/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),
 * right(right) {}
 * };
 */
class Solution {
public:
    int ans;

    void helper(TreeNode* root, std::unordered_map<int, int>& mp) {
        if (root == nullptr) {
            return;
        }

        mp[root->val]++;
        
        if (root->left == nullptr && root->right == nullptr) {
            int oddCount = 0;
            for (const auto& it : mp) {
                if (it.second % 2 == 1) {
                    oddCount++;
                }
            }

            if (oddCount <= 1) {
                ans++;
            }
        }

        helper(root->left, mp);
        helper(root->right, mp);

        mp[root->val]--;
    }

    int pseudoPalindromicPaths(TreeNode* root) {
        std::unordered_map<int, int> mp;
        ans = 0;
        helper(root, mp);
        return ans;
    }
};